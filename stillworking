
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_CLIENTES 50
#define MAX_ESTOQUE 500

struct filmes{
	int identificador;
	char titulo[50];
	int ano_producao;
	char genero[50];
};
typedef struct filmes Tfilmes;

Tfilmes lista_filmes[100];
int nfilmes=0,x;
int encerrar=0;
char busca[50];

//inicio de funcoes filmes
void cadastrarfilme(){
  Tfilmes filmes;
printf("\n   Pagina de Cadastro: \n\n");
  printf("Digite o Titulo: ");
   fflush(stdout);
    gets(lista_filmes[nfilmes].titulo);

  printf("Digite o Genero: ");
    fflush(stdout);
    gets(lista_filmes[nfilmes].genero);

  printf("Digite o Ano de Producao: ");
    fflush(stdout);
  scanf("%i", &lista_filmes[nfilmes].ano_producao);

  printf("Digite o Identificador: ");
  fflush(stdout);
  scanf("%i", &lista_filmes[nfilmes].identificador);

  nfilmes++;

}
void listarfilmes(){
    printf("\n LISTA DE FILMES: \n");
    for (int i = 0; i <= 50 ; ++i) {
        if(lista_filmes[i].identificador != 0){
		printf("   %s", lista_filmes[i].titulo );
		printf(" - %s", lista_filmes[i].genero);
		printf(" - %d - ", lista_filmes[i].ano_producao);
		printf("%d   \n", lista_filmes[i].identificador);
    }else{
        break;
        }
    }
}
void visualizarfilmes(){
        printf("Insira o ID do filme: ");
        scanf("%d",&x);
        x-=1;
		printf("\nTitulo:  %s\n",lista_filmes[x].titulo);
		printf("Genero: %s\n", lista_filmes[x].genero);
		printf("Ano de Producao: %i\n", lista_filmes[x].ano_producao);
	    printf("Identificador: %i\n", lista_filmes[x].identificador);
	    menufilmes();
	}
Tfilmes consultarfilmes(){
   printf("Insira o titulo do filme: ");
   gets(busca);
   for(x=0;x<=50;x++){
    if(strcmp(busca,lista_filmes[x].titulo)==0){
        printf("\nTitulo:  %s\n",lista_filmes[x].titulo);
		printf("Genero: %s\n", lista_filmes[x].genero);
		printf("Ano de Producao: %i\n", lista_filmes[x].ano_producao);
	    printf("Identificador: %i\n", lista_filmes[x].identificador);
	    menufilmes();
        }
   }
}
void atualizarfilmes(){ //nothing here yet
    printf("\n   Pagina de Atualizacao: \n\n");
    printf("Digite o Identificador: ");
    fflush(stdout);
    scanf("%i", &x);
    setbuf(stdin,NULL);
    x-=1;

    printf("Digite o Titulo: ");
    fflush(stdout);
    gets(lista_filmes[x].titulo);
    setbuf(stdin,NULL);
    printf("Digite o Genero: ");
    fflush(stdout);
    gets(lista_filmes[x].genero);

    printf("Digite o Ano de Producao: ");
    fflush(stdout);
    scanf("%i", &lista_filmes[x].ano_producao);
    menufilmes();
}
void excluirfilmes(){
    printf("\n   Pagina de Exclusao: \n\n");
    printf("Digite o Identificador: ");
    scanf("%d",&x);
    setbuf(stdin,NULL);
    x-=1;
 fflush(stdout);
    strcpy(lista_filmes[x].titulo,"");
    strcpy(lista_filmes[x].genero,"");
    lista_filmes[x].ano_producao = 0;
    lista_filmes[x].identificador = 0;
    fflush(stdout);

    printf("\nExcluido com sucesso!\n\n");
    menufilmes();

}
//--Final de funcoes filmes---

//inicio da estrutura de clientes
typedef struct clientes{
	char nome[20];
	char cpf[11];
	char email[20];
	int id;
}Tclientes;

Tclientes lista_clientes[50];
int nclientes=0,x;
int end=0;
char busca[50];

//inicio funcoes clientes
void cadastrarcliente(){
  Tclientes clientes;
printf("\n   Pagina de Cadastro: \n\n");
  printf("Digite o Nome: ");
   fflush(stdout);
    gets(lista_clientes[nclientes].nome);

  printf("Digite o CPF: ");
    fflush(stdout);
    gets(lista_clientes[nclientes].cpf);

  printf("Digite o Email: ");
  fflush(stdout);
  gets(lista_clientes[nclientes].email);

	nclientes++;
}
void listarclientes(){
    printf("\n LISTA DE CLIENTES: \n");
    for (int i = 0; i <=nclientes; ++i){
        nclientes-=1;
		printf("   %s", lista_clientes[i].nome);
		printf(" - %s - ", lista_clientes[i].cpf);
		printf("%s   \n", lista_clientes[i].email);
        }
    }
void visualizarclientes(){
     printf("Insira o Nome do Cliente: ");
     gets(busca);
     for(x=0;x<=50;x++){
       if(strcmp(busca,lista_clientes[x].nome)==0){
		printf("\nNome:  %s\n", lista_clientes[x].nome);
		printf("CPF: %s\n", lista_clientes[x].cpf);
		printf("Email: %s\n", lista_clientes[x].email);
        fflush(stdout);
        menuclientes();
        }
     }
}

Tclientes consultarclientes(){
    printf("\nEscreva o CPF do cliente: ");
    gets(busca);
    for(x=0;x<=50;x++){
    if(strcmp(busca,lista_clientes[x].cpf)==0){
        printf("\nNome:  %s\n", lista_clientes[x].nome);
		printf("CPF: %s\n", lista_clientes[x].cpf);
		printf("Email: %s\n", lista_clientes[x].email);
	    menuclientes();
        }
    }
}
void atualizarclientes(){
    printf("\n   Pagina de Atualizacao: \n\n");
    printf("Digite o id: ");
    scanf("%i", &x);
    fflush(stdout);
    x-=1;
        fflush(stdout);
        printf("Digite o Nome: ");
        fflush(stdout);
        scanf("%s",&lista_clientes[x].nome);
    setbuf(stdin,NULL);
        printf("Digite o CPF: ");
        fflush(stdout);
        scanf("%s",&lista_clientes[x].cpf);
    setbuf(stdin,NULL);
        printf("Digite o Email: ");
        fflush(stdout);
        scanf("%s",&lista_clientes[x].email);

    menuclientes();

}
void excluirclientes(){
     printf("\n   Pagina de Exclusao: \n\n");
    printf("Digite o Nome: ");
    scanf("%d",&x);
    setbuf(stdin,NULL);
    x-=1;
 fflush(stdout);
    strcpy(lista_clientes[x].nome,"");
    strcpy(lista_clientes[x].cpf,"");
    strcpy(lista_clientes[x].email,"");
    fflush(stdout);

    printf("\nExcluido com sucesso!\n\n");
    menuclientes();
}
//--final das funcoes clientes---

//struct estoque
typedef struct estoque{
  int identificadorE;
  int identificadorFilme;
  char dataEntrada[14];

}Testoque;

Testoque lista_estoque[MAX_ESTOQUE];
int nEstoqueFilme=0,x;
int ended=0;

//fuctions estoque
void cadastrarestoque(){
  Testoque estoque;
printf("\n   Pagina de Cadastro: \n\n");
  printf("Digite o Identificador: ");
   fflush(stdout);
    scanf("%d",&lista_estoque[nEstoqueFilme].identificadorE);

  printf("Digite o Identificador do Filme gerado automatico: \n");
    fflush(stdout);

  printf("Digite o Data de Entrada: ");
    fflush(stdout);
    scanf("%s",&lista_estoque[nEstoqueFilme].dataEntrada);

	nEstoqueFilme++;

}
void listarestoque(){
    printf("\n LISTA DE ESTOQUE: \n");
    for (int i = 0; i < nEstoqueFilme; ++i) {
        printf("   %d", lista_estoque[i].identificadorE);
        printf(" - %s", lista_filmes[i].titulo);
		printf(" - %d - ", lista_filmes[i].identificador);
		printf("%s   \n", lista_estoque[i].dataEntrada);
    }
}
void visualizarestoque(){
    printf("Insira o ID do Estoque: ");
     fflush(stdout);
        scanf("%d",&x);
        for(x=0;x<=50;x++){
		printf("\nID Estoque:  %d\n", lista_estoque[x].identificadorE);
		printf("ID Filme: %d\n", lista_filmes[x].identificador);
		printf("Data de Entrada: %s\n", lista_estoque[x].dataEntrada);
		menuestoque();
	}
}

Testoque consultarestoque(){
    printf("Insira o titulo do filme: ");
    fflush(stdout);
    gets(busca);
     for(x=0;x<=50;x++){
    if(strcmp(busca,lista_filmes[x].titulo)==0){
        printf("\nTitulo:  %s\n",lista_filmes[x].titulo);
		printf("Genero: %s\n", lista_filmes[x].genero);
		printf("Ano de Producao: %i\n", lista_filmes[x].ano_producao);
	    printf("Identificador: %i\n", lista_filmes[x].identificador);
	    printf("Data de entrada: %s", lista_estoque[x].dataEntrada);
        }
        menuestoque();
   }
}
void atualizarestoque(){ //nothing here yet
    printf("\n   Pagina de Atualizacao: \n\n");
    printf("Digite o id: ");
    scanf("%i", &x);
    fflush(stdout);
    x-=1;
        fflush(stdout);
        printf("Digite o novo ID Estoque: ");
        fflush(stdout);
        scanf("%d",&lista_estoque[x].identificadorE);
    setbuf(stdin,NULL);
        printf("Digite o novo ID Filme: ");
        fflush(stdout);
        scanf("%d",&lista_estoque[x].identificadorFilme);
    setbuf(stdin,NULL);
        printf("Digite o nova Data de Entrada: ");
    scanf("%s",&lista_estoque[x].dataEntrada);
        fflush(stdout);

    menuestoque();

}
void excluirestoque(){
 printf("\n   Pagina de Exclusao: \n\n");
    printf("Digite o Identificador do Estoque: ");
    scanf("%d",&x);
    setbuf(stdin,NULL);
    x-=1;
 fflush(stdout);
    strcpy(lista_estoque[x].dataEntrada,"");
    lista_estoque[x].identificadorE = 0;
    lista_estoque[x].identificadorFilme = 0;
    fflush(stdout);

    printf("\nExcluido com sucesso!\n\n");

    menuestoque();
}
//Menus
int menuprincialopcao(){
    int opcao;
    int c;

	printf("\n     MENU INICIAL    \n\n");
	printf("Selecionar [0] para Encerrar\n");
	printf("Selecionar [1] para Menu Filmes\n");
	printf("Selecionar [2] para Menu Clientes\n");
	printf("Selecionar [3] para Menu Estoque\n");
	printf("-Escrever opcao: ");
	scanf("%i",&opcao);
	while((c= getchar()) != '\n' && c != EOF){}
	return opcao;
}
int menueditarfilmeopcao(){
    int opcao;
    int c;
    printf("\n[0] Encerrar ");
    printf("\n[1] Atualizar Filme");
    printf("\n[2] Excluir Filme");
    printf("\n-Escrever opcao: ");
	scanf("%i",&opcao);
	while((c= getchar()) != '\n' && c != EOF){}
	return opcao;
}
int menueditarclienteopcao(){
    int opcao;
    int c;
    printf("\n[0] Encerrar ");
    printf("\n[1] Atualizar Cliente");
    printf("\n[2] Excluir Cliente");
    printf("\n-Escrever opcao: ");
	scanf("%i",&opcao);
	while((c= getchar()) != '\n' && c != EOF){}
	return opcao;
}
int menueditarestoqueopcao(){
    int opcao;
    int c;
    printf("\n[0] Encerrar ");
    printf("\n[1] Atualizar Estoque");
    printf("\n[2] Excluir Estoque");
    printf("\n-Escrever opcao: ");
	scanf("%i",&opcao);
	while((c= getchar()) != '\n' && c != EOF){}
	return opcao;
}
int menufilmesopcao(){
    int opcao;
    int c;
	fflush(stdin);
	printf("\n  MENU FILMES  \n ");
	printf("[0] - Encerrar -\n");
	printf(" [1] - Cadastrar Filmes -\n");
	printf(" [2] - Listar Filmes -\n");
	printf(" [3] - Visualizar Filmes -\n");
	printf(" [4] - Consultar Filmes -\n");
    printf(" [5] - Editar Filmes -\n");// Atualizar ou Excluir.
    printf("-Escrever opcao: ");
	fflush(stdout);
	scanf("%i", &opcao);
	while((c= getchar()) != '\n' && c != EOF){}
	return opcao;
}
int menuclientesopcao(){
    int opcao;
    int c;

	fflush(stdin);
	printf("\n  MENU CLIENTES  \n ");
	printf("[0] - Encerrar -\n");
	printf(" [1] - Cadastrar Clientes -\n");
	printf(" [2] - Listar Clientes -\n");
    printf(" [3] - Visualizar Clientes -\n");
	printf(" [4] - Consultar Clientes -\n");
    printf(" [5] - Editar Clientes -\n");// Atualizar ou Excluir.
    printf("-Escrever opcao: ");
	fflush(stdout);
	scanf("%i", &opcao);
	while((c= getchar()) != '\n' && c != EOF){}

	return opcao;
}
int menuestoqueopcao(){
    int opcao;
    int c;

	fflush(stdin);
	printf("\n  MENU ESTOQUE  \n ");
	printf("[0] - Encerrar -\n");
	printf(" [1] - Cadastrar Estoque -\n");
	printf(" [2] - Listar Estoque -\n");
	printf(" [3] - Visualizar Estoque -\n");
	printf(" [4] - Consultar Estoque -\n");
    printf(" [5] - Editar Estoque -\n");// Atualizar ou Excluir.
    printf("-Escrever opcao: ");
	fflush(stdout);
	scanf("%i", &opcao);
	while((c= getchar()) != '\n' && c != EOF){}

	return opcao;
}
void menueditarfilme(){
    int opcao=-1;
    while(encerrar==0){
        opcao=menueditarfilmeopcao();
       switch(opcao){
        case 1:
          atualizarfilmes();
            break;
        case 2:
           excluirfilmes();
            break;
        default:
            menufilmes();
        }
    }
}
void menueditarcliente(){
    int opcao=-1;
    while(encerrar==0){
        opcao=menueditarclienteopcao();
        switch(opcao){
        case 1:
          atualizarclientes();
            break;
        case 2:
         excluirclientes();
            break;
        default:
            menuclientes();
        }
    }
}
void menueditarestoque(){
    int opcao=-1;
    while(encerrar==0){
        opcao=menueditarestoqueopcao();
    switch(opcao){
        case 1:
          atualizarestoque();
            break;
        case 2:
         excluirestoque();
            break;
        default:
            menuestoque();
        }
    }
}
void menufilmes(){
    int opcao=-1;
    while(encerrar==0){
        opcao=menufilmesopcao();
        if(opcao==0){
            menuprincipal();
            end=0;
            break;
        }
        if(opcao==1){
            cadastrarfilme();
            break;
        }else if(opcao==2){
            listarfilmes();
            break;
        }else if(opcao==3){
            visualizarfilmes();
            break;
        }else if(opcao==4){
            Tfilmes filmes=consultarfilmes();
              if(lista_filmes[nfilmes].identificador==-1){
                printf("\n--404ERROR-MOVIE NOT FOUND--\n");
                }else{
                    visualizarfilmes();
                    break;
                }

        }else if(opcao==5){
            menueditarfilme();
            break;
        }
    }
}
void menuclientes(){
    int opcao=-1;
    while(end==0){
        opcao=menuclientesopcao();
        if(opcao==0){
            menuprincipal();
            encerrar=0;
            break;
        }
        if(opcao==1){
            cadastrarcliente();
            break;
        }else if(opcao==2){
            listarclientes();
            break;
        }else if(opcao==3){
            visualizarclientes();
            break;
        }else if(opcao==4){
            Tclientes clientes=consultarclientes();
              if(lista_clientes[nclientes].nome==-1){
                printf("\n--CLIENT NOT FOUND--\n");
                }else{
                    visualizarclientes();
                    break;
                }

        }else if(opcao==5){
            menueditarcliente();
                break;
        }
    }
}
void menuestoque(){
    int opcao=-1;
    while(ended==0){
        opcao=menuestoqueopcao();
        if(opcao==0){
            menuprincipal();
            encerrar=0;
            break;
        }
        if(opcao==1){
            cadastrarestoque();
            break;
        }else if(opcao==2){
            listarestoque();
            break;
        }else if(opcao==3){
            visualizarestoque();
            break;
        }else if(opcao==4){
            Testoque estoque=consultarestoque();
              if(lista_filmes[nfilmes].titulo==-1){
                printf("\n--NOT FOUND--\n");
                }else{
                    visualizarestoque();
                    break;
                }

        }else if(opcao==5){
            menueditarestoque();
            break;
        }
    }
}
void menuprincipal(){
    int opcao=-1;
    while(encerrar==0){
        opcao=menuprincialopcao();
        if(opcao==0){
            printf("\n----END OF THE PROGRAM----");
            encerrar=0;
            break;
        }
        if(opcao==1){
            menufilmes();
            break;
        }else if(opcao==2){
            menuclientes();
            break;
        }else if(opcao==3){
            menuestoque();
            break;
        }
    }
}
int main (void){
    menuprincipal();
return 0;
}
