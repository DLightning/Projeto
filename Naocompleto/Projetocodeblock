#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_FILMES 100 //tamanho da lista de filmes
#define MAX_CLIENTES 50

struct filmes{
	int identificador;
	char titulo[50];
	int ano_producao;
	char genero[50];
};
typedef struct filmes Tfilmes;

Tfilmes lista_filmes[MAX_FILMES];
int nfilmes=0;
int encerrar=0;

//inicio de funcoes filmes
void cadastrarfilme(){
  Tfilmes filmes;
printf("\n   Pagina de Cadastro: \n\n");
  printf("Digite o Titulo: ");
   fflush(stdout);
    gets(filmes.titulo);

  printf("Digite o Genero: ");
    fflush(stdout);
    gets(filmes.genero);

  printf("Digite o Ano de Producao: ");
    fflush(stdout);
  scanf("%i", &filmes.ano_producao);

  printf("Digite o Identificador: ");
  fflush(stdout);
  scanf("%i", &filmes.identificador);

  lista_filmes[nfilmes]=filmes;
	nfilmes++;
}
void listarfilmes(){
    printf("\n LISTA DE FILMES: \n");
    for (int i = 0; i < nfilmes; ++i) {
		printf("   %s\n", lista_filmes[i].titulo );
    }
}
void visualizarfilmes(){
    Tfilmes filmes;
		printf("\nTitulo:  %s\n", filmes.titulo);
		printf("Genero: %s\n", filmes.genero);
		printf("Ano de Producao: %i\n", filmes.ano_producao);
	    printf("Identificador: %i\n", filmes.identificador);
	}
Tfilmes consultarfilmes(){
    int identificador;
    int c;
    Tfilmes filmes;
filmes.identificador=-1;
    printf("\nEscreva o Identificador do Filme: ");
    fflush(stdout);
    scanf("%i",&identificador);
    for(int i=0;i<nfilmes;i++){
        if(lista_filmes[i].identificador==identificador){
            filmes=lista_filmes[i];
        }
    }
    while((c= getchar()) != '\n' && c != EOF){}
	return filmes;
}
void atualizarfilmes(){ //nothing here yet

}
void excluirfilmes(){
    Tfilmes filmes;
    printf("Digite o Titulo: ");
    fflush(stdout);
    gets(filmes.titulo);

    lista_filmes[nfilmes]=filmes; //ele retira o ultimo slot. precisa de ajuste
	nfilmes--;

}
//--Final de funcoes filmes---

//inicio da estrutura de clientes
struct clientes{
	char nome[20];
	char cpf[11];
	char email[20];
};
typedef struct clientes Tclientes;

Tclientes lista_clientes[MAX_CLIENTES];
int nclientes=0;
int end=0;

//inicio funcoes clientes
void cadastrarcliente(){
  Tclientes clientes;
printf("\n   Pagina de Cadastro: \n\n");
  printf("Digite o Nome: ");
   fflush(stdout);
    gets(clientes.nome);

  printf("Digite o CPF: ");
    fflush(stdout);
    gets(clientes.cpf);

  printf("Digite o Email: ");
  fflush(stdout);
  gets(clientes.email);

  lista_clientes[nclientes]=clientes;
	nclientes++;
}
void listarclientes(){
    printf("\n LISTA DE CLIENTES: \n");
    for (int i = 0; i < nclientes; ++i) {
		printf("   %s\n", lista_clientes[i].nome);
    }
}
void visualizarclientes(){
    Tclientes clientes;

		printf("\nNome:  %s\n", clientes.nome);
		printf("CPF: %s\n", clientes.cpf);
		printf("Email: %s\n", clientes.email);
	}

	Tclientes consultarclientes(){
    int nome;
    int c;
    Tclientes clientes;
    printf("\nEscreva o nome do cliente: ");
    fflush(stdout);
    scanf("%s",&nome);
    for(int i=0;i<nclientes;i++){
        if(lista_clientes[i].nome==nome){
            clientes=lista_clientes[i];
        }
    }
    while((c= getchar()) != '\n' && c != EOF){}
	return clientes;
}
void atualizarclientes(){ //nothing here yet

}
void excluirclientes(){
    Tclientes clientes;
    printf("Digite o Nome: ");
    fflush(stdout);
    gets(clientes.nome);

    lista_clientes[nclientes]=clientes; //ele retira o ultimo slot. precisa de ajuste
	nclientes--;
}
//--final das funcoes clientes---

//Menus
int menuprincialopcao(){
    int opcao;
    int c;

	printf("\n     MENU INICIAL    \n\n");
	printf("Selecionar [0] para Encerrar\n");
	printf("Selecionar [1] para Menu Filmes\n");
	printf("Selecionar [2] para Menu Clientes\n");
	printf("-Escrever opcao: ");
	scanf("%i",&opcao);
	while((c= getchar()) != '\n' && c != EOF){}
	return opcao;
}
int menueditarfilmeopcao(){
    int opcao;
    int c;
    printf("\n[0] Encerrar ");
    printf("\n[1] Atualizar Filme");
    printf("\n[2] Excluir Filme");
    printf("\n-Escrever opcao: ");
	scanf("%i",&opcao);
	while((c= getchar()) != '\n' && c != EOF){}
	return opcao;
}
int menueditarclienteopcao(){
    int opcao;
    int c;
    printf("\n[0] Encerrar ");
    printf("\n[1] Atualizar Cliente");
    printf("\n[2] Excluir Cliente");
    printf("\n-Escrever opcao: ");
	scanf("%i",&opcao);
	while((c= getchar()) != '\n' && c != EOF){}
	return opcao;
}
int menufilmesopcao(){
    int opcao;
    int c;
	fflush(stdin);
	printf("\n  MENU FILMES  \n ");
	printf("[0] - Encerrar -\n");
	printf(" [1] - Cadastrar Filmes -\n");
	printf(" [2] - Listar Filmes -\n");
	printf(" [3] - Consultar Filmes -\n");
    printf(" [4] - Editar Filmes -\n");// Atualizar ou Excluir.
    printf("-Escrever opcao: ");
	fflush(stdout);
	scanf("%i", &opcao);
	while((c= getchar()) != '\n' && c != EOF){}
	return opcao;
}
int menuclientesopcao(){
    int opcao;
    int c;

	fflush(stdin);
	printf("\n  MENU CLIENTES  \n ");
	printf("[0] - Encerrar -\n");
	printf(" [1] - Cadastrar Clientes -\n");
	printf(" [2] - Listar Clientes -\n");
	printf(" [3] - Consultar Clientes -\n");
    printf(" [4] - Editar Clientes -\n");// Atualizar ou Excluir.

	fflush(stdout);
	scanf("%i", &opcao);
	while((c= getchar()) != '\n' && c != EOF){}

	return opcao;
}
void menueditarfilme(){
    int opcao=-1;
    while(encerrar==0){
        opcao=menueditarfilmeopcao();
        if(opcao==0){
            printf("\n----END OF THE PROGRAM----");
            encerrar=0;
            break;
        }
        if(opcao==1){
            atualizarfilmes();
        }else if(opcao==2){
            excluirfilmes();
        }
    }
}
void menueditarcliente(){
    int opcao=-1;
    while(encerrar==0){
        opcao=menueditarclienteopcao();
        if(opcao==0){
            printf("\n----END OF THE PROGRAM----");
            encerrar=0;
            break;
        }
        if(opcao==1){
            atualizarclientes();
        }else if(opcao==2){
            excluirclientes();
        }
    }
}
void menufilmes(){
    int opcao=-1;
    while(end==0){
        opcao=menufilmesopcao();
        if(opcao==0){
            printf("\n----END OF THE PROGRAM----");
            end=0;
            break;
        }
        if(opcao==1){
            cadastrarfilme();
        }else if(opcao==2){
            listarfilmes();
        }else if(opcao==3){
            Tfilmes filmes=consultarfilmes();
              if(filmes.identificador==-1){
                printf("\n--404ERROR-MOVIE NOT FOUND--\n");
                }else{
                    visualizarfilmes();
                }

        }else if(opcao==4){
            menueditarfilme();
        }
    }
}

void menuclientes(){
    int opcao=-1;
    while(encerrar==0){
        opcao=menuclientesopcao();
        if(opcao==0){
            printf("\n----END OF THE PROGRAM----");
            encerrar=0;
            break;
        }
        if(opcao==1){
            cadastrarcliente();
        }else if(opcao==2){
            listarclientes();
        }else if(opcao==3){
            Tclientes clientes=consultarclientes();
              if(clientes.nome==-1){
                printf("\n--404ERROR-MOVIE NOT FOUND--\n");
                }else{
                    visualizarclientes();
                }

        }else if(opcao==4){
            menueditarcliente();
        }
    }
}

void menuprincipal(){
    int opcao=-1;
    while(encerrar==0){
        opcao=menuprincialopcao();
        if(opcao==0){
            printf("\n----END OF THE PROGRAM----");
            encerrar=0;
            break;
        }
        if(opcao==1){
            menufilmes();
        }else if(opcao==2){
            menuclientes();
        }
    }
}
int main (void){
    menuprincipal();
return 0;
}
